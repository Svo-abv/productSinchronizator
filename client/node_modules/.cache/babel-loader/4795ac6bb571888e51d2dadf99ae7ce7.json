{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\JS\\\\React\\\\productSinchronizator\\\\client\\\\src\\\\modules\\\\CatalogesBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { Context } from '..';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatalogesBar = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    cataloges\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: cataloges.get().map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}, \"Mzap6d/4L8Ggn0fJhtaLWa5v08A=\")), \"Mzap6d/4L8Ggn0fJhtaLWa5v08A=\");\n\n_c2 = CatalogesBar;\nexport default CatalogesBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CatalogesBar$observer\");\n$RefreshReg$(_c2, \"CatalogesBar\");","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/modules/CatalogesBar.tsx"],"names":["observer","React","useContext","ListGroup","Context","CatalogesBar","cataloges","get","map","item","name","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,IAAxB;;;AAEA,MAAMC,YAAY,MAAGL,QAAQ,SAAC,MAAM;AAAA;;AAChC,QAAM;AAAEM,IAAAA;AAAF,MAAgBJ,UAAU,CAACE,OAAD,CAAhC;AACA,sBACI,QAAC,SAAD;AAAA,cACKE,SAAS,CAACC,GAAV,GAAgBC,GAAhB,CAAqBC,IAAD,iBACjB,QAAC,SAAD,CAAW,IAAX;AAAA,gBAA+BA,IAAI,CAACC;AAApC,OAAqBD,IAAI,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAT4B,kCAAX,iCAAlB;;MAAMN,Y;AAWN,eAAeA,YAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Context } from '..';\r\n\r\nconst CatalogesBar = observer(() => {\r\n    const { cataloges } = useContext(Context);\r\n    return (\r\n        <ListGroup>\r\n            {cataloges.get().map((item) =>\r\n                <ListGroup.Item key={item.id}>{item.name}</ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default CatalogesBar;"]},"metadata":{},"sourceType":"module"}