{"ast":null,"code":"import axios from 'axios';\nimport process from 'process';\nconst $host = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API\n});\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_API\n});\nconst headers = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json; charset=utf-8\",\n  \"Access-Control-Allow-Credentials\": true,\n  \"X-Requested-With\": \"XMLHttpRequest\"\n};\n\nconst authInterceptor = config => {\n  try {\n    var _config$headers;\n\n    const headers = (_config$headers = config.headers) !== null && _config$headers !== void 0 ? _config$headers : {};\n    headers.Authorization = `Bearer ${localStorage.getItem('tiken')}`;\n    return { ...config,\n      headers\n    };\n  } catch (e) {}\n\n  return config;\n};\n\n$authHost.interceptors.request.use(authInterceptor);\nexport { $host, $authHost };","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/http/index.tsx"],"names":["axios","process","$host","create","baseURL","env","REACT_APP_SERVER_API","$authHost","headers","Accept","authInterceptor","config","Authorization","localStorage","getItem","e","interceptors","request","use"],"mappings":"AAAA,OAAOA,KAAP,MAAiD,OAAjD;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,CACV;AACIC,EAAAA,OAAO,EAAEH,OAAO,CAACI,GAAR,CAAYC;AADzB,CADU,CAAd;AAMA,MAAMC,SAAS,GAAGP,KAAK,CAACG,MAAN,CACd;AACIC,EAAAA,OAAO,EAAEH,OAAO,CAACI,GAAR,CAAYC;AADzB,CADc,CAAlB;AAKA,MAAME,OAAmD,GAAG;AACxDC,EAAAA,MAAM,EAAE,kBADgD;AAExD,kBAAgB,iCAFwC;AAGxD,sCAAoC,IAHoB;AAIxD,sBAAoB;AAJoC,CAA5D;;AAOA,MAAMC,eAAe,GAAIC,MAAD,IAAoD;AACxE,MAAI;AAAA;;AACA,UAAMH,OAAO,sBAAGG,MAAM,CAACH,OAAV,6DAAqB,EAAlC;AACAA,IAAAA,OAAO,CAACI,aAAR,GAAyB,UAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EAAhE;AACA,WAAO,EAAE,GAAGH,MAAL;AAAaH,MAAAA;AAAb,KAAP;AACH,GAJD,CAIE,OAAOO,CAAP,EAAU,CAEX;;AACD,SAAOJ,MAAP;AACH,CATD;;AAWAJ,SAAS,CAACS,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCR,eAAnC;AAEA,SAASR,KAAT,EAAgBK,SAAhB","sourcesContent":["import axios, { Axios, AxiosRequestConfig } from 'axios';\r\nimport process from 'process';\r\n\r\nconst $host = axios.create(\r\n    {\r\n        baseURL: process.env.REACT_APP_SERVER_API\r\n    }\r\n);\r\n\r\nconst $authHost = axios.create(\r\n    {\r\n        baseURL: process.env.REACT_APP_SERVER_API\r\n    }\r\n);\r\nconst headers: Readonly<Record<string, string | boolean>> = {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json; charset=utf-8\",\r\n    \"Access-Control-Allow-Credentials\": true,\r\n    \"X-Requested-With\": \"XMLHttpRequest\",\r\n};\r\n\r\nconst authInterceptor = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n    try {\r\n        const headers = config.headers ?? {};\r\n        headers.Authorization = `Bearer ${localStorage.getItem('tiken')}`;\r\n        return { ...config, headers };\r\n    } catch (e) {\r\n\r\n    }\r\n    return config;\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport { $host, $authHost };\r\n"]},"metadata":{},"sourceType":"module"}