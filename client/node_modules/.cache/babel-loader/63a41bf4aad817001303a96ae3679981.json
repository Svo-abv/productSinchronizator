{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\JS\\\\React\\\\productSinchronizator\\\\client\\\\src\\\\pages\\\\Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '..';\nimport { checkApi } from '../httpApi/UserApi';\nimport NavigationRouts from '../modules/NavigationRouts';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    localStorage.getItem(\"jwtHash\") && checkApi().then(data => {\n      user.user = data;\n      user.isAuth = true;\n    }).finally(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(NavigationRouts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}, \"4mt1jDoDt0h52XCxQdiEl89i/LM=\")), \"4mt1jDoDt0h52XCxQdiEl89i/LM=\");\n\n_c2 = Main;\nexport default Main;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main$observer\");\n$RefreshReg$(_c2, \"Main\");","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/pages/Main.tsx"],"names":["observer","React","useContext","useEffect","useState","Context","checkApi","NavigationRouts","Main","user","loading","setLoading","localStorage","getItem","then","data","isAuth","finally"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,IAAc,MAAGR,QAAQ,SAAC,MAAM;AAAA;;AAEpC,QAAM;AAAES,IAAAA;AAAF,MAAWP,UAAU,CAACG,OAAD,CAA3B;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,KAAmCP,QAAQ,GACxCQ,IADgC,CAC1BC,IAAD,IAAU;AACdN,MAAAA,IAAI,CAACA,IAAL,GAAYM,IAAZ;AACAN,MAAAA,IAAI,CAACO,MAAL,GAAc,IAAd;AACD,KAJgC,EAKhCC,OALgC,CAKxB,MAAMN,UAAU,CAAC,KAAD,CALQ,CAAnC;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAA,2BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnB8B,kCAAX,iCAApB;;MAAMH,I;AAqBN,eAAeA,IAAf","sourcesContent":["import { observer } from 'mobx-react';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Context } from '..';\nimport { checkApi } from '../httpApi/UserApi';\nimport NavigationRouts from '../modules/NavigationRouts';\nimport { IUser } from '../store/UserStore';\nimport '../styles/App.css'\n\nconst Main: React.FC = observer(() => {\n\n  const { user } = useContext(Context);\n\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    localStorage.getItem(\"jwtHash\") && checkApi()\n      .then((data) => {\n        user.user = data;\n        user.isAuth = true;\n      })\n      .finally(() => setLoading(false));\n\n  }, []);\n  return (\n    <div>\n      <NavigationRouts />\n    </div >\n  );\n});\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}