{"ast":null,"code":"import _objectSpread from\"F:\\\\Programming\\\\JS\\\\React\\\\productSinchronizator\\\\client\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import axios from'axios';var $pubHost=axios.create({baseURL:process.env.REACT_APP_SERVER_API});var $authHost=axios.create({baseURL:process.env.REACT_APP_SERVER_API});var authInterceptor=function authInterceptor(config){try{var _config$headers;var headers=(_config$headers=config.headers)!==null&&_config$headers!==void 0?_config$headers:{};headers.Authorization=\"Bearer \".concat(localStorage.getItem('jwtHash'));return _objectSpread(_objectSpread({},config),{},{headers:headers});}catch(e){}return config;};$authHost.interceptors.request.use(authInterceptor);export{$pubHost,$authHost};","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/httpApi/index.tsx"],"names":["axios","$pubHost","create","baseURL","process","env","REACT_APP_SERVER_API","$authHost","authInterceptor","config","headers","Authorization","localStorage","getItem","e","interceptors","request","use"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,KAA0C,OAA1C,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CACb,CACIC,OAAO,CAAEC,OAAO,CAACC,GAAR,CAAYC,oBADzB,CADa,CAAjB,CAMA,GAAMC,CAAAA,SAAS,CAAGP,KAAK,CAACE,MAAN,CACd,CACIC,OAAO,CAAEC,OAAO,CAACC,GAAR,CAAYC,oBADzB,CADc,CAAlB,CAMA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAoD,CACxE,GAAI,qBACA,GAAMC,CAAAA,OAAO,kBAAGD,MAAM,CAACC,OAAV,mDAAqB,EAAlC,CACAA,OAAO,CAACC,aAAR,kBAAkCC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlC,EACA,sCAAYJ,MAAZ,MAAoBC,OAAO,CAAPA,OAApB,GACH,CAAC,MAAOI,CAAP,CAAU,CAEX,CACD,MAAOL,CAAAA,MAAP,CACH,CATD,CAWAF,SAAS,CAACQ,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CAAmCT,eAAnC,EAEA,OAASP,QAAT,CAAmBM,SAAnB","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios';\r\n\r\nconst $pubHost = axios.create(\r\n    {\r\n        baseURL: process.env.REACT_APP_SERVER_API\r\n    }\r\n);\r\n\r\nconst $authHost = axios.create(\r\n    {\r\n        baseURL: process.env.REACT_APP_SERVER_API\r\n    }\r\n);\r\n\r\nconst authInterceptor = (config: AxiosRequestConfig): AxiosRequestConfig => {\r\n    try {\r\n        const headers = config.headers ?? {};\r\n        headers.Authorization = `Bearer ${localStorage.getItem('jwtHash')}`;\r\n        return { ...config, headers };\r\n    } catch (e) {\r\n\r\n    }\r\n    return config;\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport { $pubHost, $authHost };\r\n"]},"metadata":{},"sourceType":"module"}