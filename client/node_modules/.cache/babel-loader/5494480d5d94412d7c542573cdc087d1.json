{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\JS\\\\React\\\\productSinchronizator\\\\client\\\\src\\\\modules\\\\NavigationRouts.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { Context } from '..';\nimport NavigationMenu from './NavigationMenu';\nimport PublicRoutes from './RoutesPablic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavigationRouts = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3  mt-4 pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [user.isAuth && console.log(\"It`s OK!\"), PublicRoutes.map(_ref => {\n          let {\n            path,\n            component\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: path,\n            element: component\n          }, path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\")), \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c2 = NavigationRouts;\nexport default NavigationRouts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavigationRouts$observer\");\n$RefreshReg$(_c2, \"NavigationRouts\");","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/modules/NavigationRouts.tsx"],"names":["observer","React","useContext","Container","BrowserRouter","Routes","Route","Context","NavigationMenu","PublicRoutes","NavigationRouts","user","isAuth","console","log","map","path","component"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,eAAe,MAAGV,QAAQ,SAAC,MAAM;AAAA;;AACnC,QAAM;AAAEW,IAAAA;AAAF,MAAWT,UAAU,CAACK,OAAD,CAA3B;AACA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,gBAArB;AAAA,6BACI,QAAC,MAAD;AAAA,mBAGQI,IAAI,CAACC,MAAL,IAAeC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAHvB,EAUQL,YAAY,CAACM,GAAb,CAAiB;AAAA,cAAC;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD;AAAA,8BACb,QAAC,KAAD;AAAkB,YAAA,IAAI,EAAED,IAAxB;AAA8B,YAAA,OAAO,EAAEC;AAAvC,aAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,kBADa;AAAA,SAAjB,CAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzB+B,kCAAX,iCAArB;;MAAMN,e;AA2BN,eAAeA,eAAf","sourcesContent":["import { observer } from 'mobx-react';\r\nimport React, { useContext } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { Context } from '..';\r\nimport NavigationMenu from './NavigationMenu';\r\nimport PublicRoutes from './RoutesPablic';\r\nimport { AuthRoutes } from './RoutesPrivate';\r\n\r\nconst NavigationRouts = observer(() => {\r\n    const { user } = useContext(Context);\r\n    return (\r\n        <BrowserRouter>\r\n            <NavigationMenu />\r\n            <Container className=\"p-3  mt-4 pt-5\" >\r\n                <Routes>\r\n\r\n                    {\r\n                        user.isAuth && console.log(\"It`s OK!\")\r\n                    }\r\n                    {/* {\r\n                        user.isAuth && AuthRoutes.map(({ path, component }) =>\r\n                            <Route key={path} path={path} element={component} />\r\n                        )} */}\r\n                    {\r\n                        PublicRoutes.map(({ path, component }) =>\r\n                            <Route key={path} path={path} element={component} />\r\n                        )\r\n                    }\r\n\r\n                </Routes>\r\n            </Container>\r\n        </BrowserRouter>\r\n    );\r\n});\r\n\r\nexport default NavigationRouts;"]},"metadata":{},"sourceType":"module"}