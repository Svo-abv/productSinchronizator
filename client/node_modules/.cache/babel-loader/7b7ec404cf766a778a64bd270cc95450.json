{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport { $pubHost, $authHost } from \".\";\nexport const loginApi = async (name, password) => {\n  const {\n    data\n  } = await $pubHost.post('api/user/login', {\n    name,\n    password\n  });\n  localStorage.setItem(\"jwtHash\", data.jwtHash);\n  return jwtDecode(data.jwtHash);\n};\nexport const checkApi = async user => {\n  const {\n    data\n  } = await $authHost.post('api/user/auth', {\n    user\n  });\n  localStorage.setItem(\"jwtHash\", data.jwtHash);\n  return jwtDecode(data.jwtHash);\n};","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/httpApi/UserApi.tsx"],"names":["jwtDecode","$pubHost","$authHost","loginApi","name","password","data","post","localStorage","setItem","jwtHash","checkApi","user"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,GAApC;AAGA,OAAO,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAqBC,QAArB,KAA0C;AAE9D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,QAAQ,CAACM,IAAT,CAAc,gBAAd,EAAgC;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAhC,CAAvB;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,IAAI,CAACI,OAArC;AACA,SAAOV,SAAS,CAACM,IAAI,CAACI,OAAN,CAAhB;AACH,CALM;AAMP,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAuB;AAE3C,QAAM;AAAEN,IAAAA;AAAF,MAAW,MAAMJ,SAAS,CAACK,IAAV,CAAe,eAAf,EAAgC;AAAEK,IAAAA;AAAF,GAAhC,CAAvB;AACAJ,EAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,IAAI,CAACI,OAArC;AACA,SAAOV,SAAS,CAACM,IAAI,CAACI,OAAN,CAAhB;AACH,CALM","sourcesContent":["import jwtDecode from \"jwt-decode\";\r\nimport { $pubHost, $authHost } from \".\";\r\nimport { IUser } from \"../store/UserStore\";\r\n\r\nexport const loginApi = async (name: string, password: string) => {\r\n\r\n    const { data } = await $pubHost.post('api/user/login', { name, password });\r\n    localStorage.setItem(\"jwtHash\", data.jwtHash);\r\n    return jwtDecode(data.jwtHash);\r\n}\r\nexport const checkApi = async (user: IUser) => {\r\n\r\n    const { data } = await $authHost.post('api/user/auth', { user });\r\n    localStorage.setItem(\"jwtHash\", data.jwtHash);\r\n    return jwtDecode(data.jwtHash);\r\n}"]},"metadata":{},"sourceType":"module"}