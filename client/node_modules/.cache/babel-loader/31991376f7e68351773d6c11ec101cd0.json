{"ast":null,"code":"import{observer}from'mobx-react-lite';import React,{useContext}from'react';import{ListGroup}from'react-bootstrap';import{Context}from'..';import{getAllProductsByBrendApi}from'../httpApi/ProductApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CatalogesBar=observer(function(){var _useContext=useContext(Context),cataloges=_useContext.cataloges,products=_useContext.products,user=_useContext.user,brands=_useContext.brands;var onClikHandle=function onClikHandle(item){getAllProductsByBrendApi(user.user.id,brands._brands.id,item.id).then(function(data){return products.set(data);});};return/*#__PURE__*/_jsxs(ListGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-3\",children:\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438:\"}),cataloges.get().map(function(item){return/*#__PURE__*/_jsx(ListGroup.Item,{action:true,variant:\"light\",active:cataloges.selectedCataloge===item,onClick:function onClick(){return onClikHandle(item);},children:item.name},item.id);})]});});export default CatalogesBar;","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/modules/CatalogesBar.tsx"],"names":["observer","React","useContext","ListGroup","Context","getAllProductsByBrendApi","CatalogesBar","cataloges","products","user","brands","onClikHandle","item","id","_brands","then","data","set","get","map","selectedCataloge","name"],"mappings":"AAAA,OAASA,QAAT,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,OAAT,KAAwB,IAAxB,CACA,OAASC,wBAAT,KAAyC,uBAAzC,C,wFAGA,GAAMC,CAAAA,YAAY,CAAGN,QAAQ,CAAC,UAAM,CAChC,gBAA8CE,UAAU,CAACE,OAAD,CAAxD,CAAQG,SAAR,aAAQA,SAAR,CAAmBC,QAAnB,aAAmBA,QAAnB,CAA6BC,IAA7B,aAA6BA,IAA7B,CAAmCC,MAAnC,aAAmCA,MAAnC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAqB,CAEtCP,wBAAwB,CAACI,IAAI,CAACA,IAAL,CAAUI,EAAX,CAAeH,MAAM,CAACI,OAAP,CAAeD,EAA9B,CAAkCD,IAAI,CAACC,EAAvC,CAAxB,CAAmEE,IAAnE,CAAwE,SAACC,IAAD,QACpER,CAAAA,QAAQ,CAACS,GAAT,CAAaD,IAAb,CADoE,EAAxE,EAGH,CALD,CAOA,mBACI,MAAC,SAAD,EAAW,SAAS,CAAC,MAArB,wBACI,WAAI,SAAS,CAAC,MAAd,qEADJ,CAEKT,SAAS,CAACW,GAAV,GAAgBC,GAAhB,CAAoB,SAACP,IAAD,qBACjB,KAAC,SAAD,CAAW,IAAX,EACI,MAAM,KADV,CAEI,OAAO,CAAC,OAFZ,CAGI,MAAM,CAAEL,SAAS,CAACa,gBAAV,GAA+BR,IAH3C,CAKI,OAAO,CAAE,yBAAMD,CAAAA,YAAY,CAACC,IAAD,CAAlB,EALb,UAKwCA,IAAI,CAACS,IAL7C,EAIST,IAAI,CAACC,EAJd,CADiB,EAApB,CAFL,GADJ,CAaH,CAvB4B,CAA7B,CAyBA,cAAeP,CAAAA,YAAf","sourcesContent":["import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { Context } from '..';\r\nimport { getAllProductsByBrendApi } from '../httpApi/ProductApi';\r\nimport { ICataloge } from '../store/CatalogeStroe';\r\n\r\nconst CatalogesBar = observer(() => {\r\n    const { cataloges, products, user, brands } = useContext(Context);\r\n\r\n    const onClikHandle = (item: ICataloge) => {\r\n\r\n        getAllProductsByBrendApi(user.user.id, brands._brands.id, item.id).then((data) =>\r\n            products.set(data)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ListGroup className='mb-3' >\r\n            <h4 className='mb-3'>Категории:</h4>\r\n            {cataloges.get().map((item) =>\r\n                <ListGroup.Item\r\n                    action\r\n                    variant=\"light\"\r\n                    active={cataloges.selectedCataloge === item}\r\n                    key={item.id}\r\n                    onClick={() => onClikHandle(item)}>{item.name}</ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default CatalogesBar;"]},"metadata":{},"sourceType":"module"}