{"ast":null,"code":"var _jsxFileName = \"F:\\\\Programming\\\\JS\\\\React\\\\productSinchronizator\\\\client\\\\src\\\\modules\\\\BrandsBar.tsx\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { Card, Row } from 'react-bootstrap';\nimport { Context } from '..';\nimport { getCatalogeByUserApi } from '../httpApi/CatalogeApi';\nimport { getAllProductsByBrendApi } from '../httpApi/ProductApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BrandsBar = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    user,\n    cataloges,\n    brands,\n    products\n  } = useContext(Context);\n\n  const onClikHandle = item => {\n    console.log(brands.selectedBrand);\n    if (brands.selectedBrand === undefined) brands.setSelectedBrand(item);else brands.setSelectedBrand(undefined);\n    getCatalogeByUserApi(user.user.id, item.id).then(data => {\n      cataloges.set(data);\n      getAllProductsByBrendApi(user.user.id, item.id).then(data => products.set(data));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex\",\n    children: brands.get().map(item => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 'auto'\n      },\n      className: \"mx-2 mb-4 p-2\",\n      border: brands.selectedBrand === item ? 'danger' : 'light',\n      onClick: () => onClikHandle(item),\n      children: [\" \", item.name]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"9WG5ybOjRrXdrBINwAe4x4p76SA=\")), \"9WG5ybOjRrXdrBINwAe4x4p76SA=\");\n\n_c2 = BrandsBar;\nexport default BrandsBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BrandsBar$observer\");\n$RefreshReg$(_c2, \"BrandsBar\");","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/modules/BrandsBar.tsx"],"names":["observer","React","useContext","Card","Row","Context","getCatalogeByUserApi","getAllProductsByBrendApi","BrandsBar","user","cataloges","brands","products","onClikHandle","item","console","log","selectedBrand","undefined","setSelectedBrand","id","then","data","set","get","map","width","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAA+BC,GAA/B,QAA0C,iBAA1C;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;;;AAGA,MAAMC,SAAS,MAAGR,QAAQ,SAAC,MAAM;AAAA;;AAC7B,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA;AAA3B,MAAwCV,UAAU,CAACG,OAAD,CAAxD;;AAEA,QAAMQ,YAAY,GAAIC,IAAD,IAAkB;AAEnCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,aAAnB;AACA,QAAIN,MAAM,CAACM,aAAP,KAAyBC,SAA7B,EACIP,MAAM,CAACQ,gBAAP,CAAwBL,IAAxB,EADJ,KAGIH,MAAM,CAACQ,gBAAP,CAAwBD,SAAxB;AAEJZ,IAAAA,oBAAoB,CAACG,IAAI,CAACA,IAAL,CAAUW,EAAX,EAAeN,IAAI,CAACM,EAApB,CAApB,CAA4CC,IAA5C,CAAkDC,IAAD,IAAU;AACvDZ,MAAAA,SAAS,CAACa,GAAV,CAAcD,IAAd;AACAf,MAAAA,wBAAwB,CAACE,IAAI,CAACA,IAAL,CAAUW,EAAX,EAAeN,IAAI,CAACM,EAApB,CAAxB,CAAgDC,IAAhD,CAAsDC,IAAD,IACjDV,QAAQ,CAACW,GAAT,CAAaD,IAAb,CADJ;AAGH,KALD;AAMH,GAdD;;AAeA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACKX,MAAM,CAACa,GAAP,GAAaC,GAAb,CAAkBX,IAAD,iBACd,QAAC,IAAD;AACI,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OADX;AAEI,MAAA,SAAS,EAAC,eAFd;AAGI,MAAA,MAAM,EAAEf,MAAM,CAACM,aAAP,KAAyBH,IAAzB,GAAgC,QAAhC,GAA2C,OAHvD;AAKI,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACC,IAAD,CAL/B;AAAA,sBAKyCA,IAAI,CAACa,IAL9C;AAAA,OAISb,IAAI,CAACM,EAJd;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/ByB,kCAAX,iCAAf;;MAAMZ,S;AAiCN,eAAeA,SAAf","sourcesContent":["import { observer } from 'mobx-react';\r\nimport React, { useContext } from 'react';\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Context } from '..';\r\nimport { getCatalogeByUserApi } from '../httpApi/CatalogeApi';\r\nimport { getAllProductsByBrendApi } from '../httpApi/ProductApi';\r\nimport { IBrand } from '../store/BrandStroe';\r\n\r\nconst BrandsBar = observer(() => {\r\n    const { user, cataloges, brands, products } = useContext(Context);\r\n\r\n    const onClikHandle = (item: IBrand) => {\r\n\r\n        console.log(brands.selectedBrand);\r\n        if (brands.selectedBrand === undefined)\r\n            brands.setSelectedBrand(item);\r\n        else\r\n            brands.setSelectedBrand(undefined);\r\n\r\n        getCatalogeByUserApi(user.user.id, item.id).then((data) => {\r\n            cataloges.set(data)\r\n            getAllProductsByBrendApi(user.user.id, item.id).then((data) =>\r\n                products.set(data)\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Row className='d-flex'>\r\n            {brands.get().map((item) =>\r\n                <Card\r\n                    style={{ width: 'auto' }}\r\n                    className='mx-2 mb-4 p-2'\r\n                    border={brands.selectedBrand === item ? 'danger' : 'light'}\r\n                    key={item.id}\r\n                    onClick={() => onClikHandle(item)}> {item.name}\r\n                </Card>\r\n            )}\r\n        </Row >\r\n    );\r\n});\r\n\r\nexport default BrandsBar;"]},"metadata":{},"sourceType":"module"}