{"ast":null,"code":"import{observer}from'mobx-react';import React,{useContext}from'react';import{Card,Row}from'react-bootstrap';import{Context}from'..';import{getCatalogeByUserApi}from'../httpApi/CatalogeApi';import{getAllProductsByBrendApi}from'../httpApi/ProductApi';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BrandsBar=observer(function(){var _useContext=useContext(Context),user=_useContext.user,cataloges=_useContext.cataloges,brands=_useContext.brands,products=_useContext.products;var onClikHandle=function onClikHandle(item){//\n// TODO снятие выбора\n// \n// console.log(brands.selectedBrand);\n// if (brands.selectedBrand === undefined)\n//     brands.setSelectedBrand(item);\n// else\n//     brands.setSelectedBrand(undefined);\nbrands.setSelectedBrand(item);getCatalogeByUserApi(user.user.id,item.id).then(function(data){cataloges.set(data);getAllProductsByBrendApi(user.user.id,item.id).then(function(data){return products.set(data);});});};return/*#__PURE__*/_jsxs(Row,{className:\"d-flex ps-1\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"mb-3\",children:\"\\u0412\\u0430\\u0448\\u0438 \\u0431\\u0440\\u0435\\u043D\\u0434\\u044B:\"}),brands.get().map(function(item){return/*#__PURE__*/_jsxs(Card,{style:{width:'auto'},className:\"mx-2 mb-4 p-2\",bg:brands.selectedBrand===item?'light':'',onClick:function onClick(){return onClikHandle(item);},children:[\" \",item.name]},item.id);})]});});export default BrandsBar;","map":{"version":3,"sources":["F:/Programming/JS/React/productSinchronizator/client/src/modules/BrandsBar.tsx"],"names":["observer","React","useContext","Card","Row","Context","getCatalogeByUserApi","getAllProductsByBrendApi","BrandsBar","user","cataloges","brands","products","onClikHandle","item","setSelectedBrand","id","then","data","set","get","map","width","selectedBrand","name"],"mappings":"AAAA,OAASA,QAAT,KAAyB,YAAzB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,CAA+BC,GAA/B,KAA0C,iBAA1C,CACA,OAASC,OAAT,KAAwB,IAAxB,CACA,OAASC,oBAAT,KAAqC,wBAArC,CACA,OAASC,wBAAT,KAAyC,uBAAzC,C,wFAGA,GAAMC,CAAAA,SAAS,CAAGR,QAAQ,CAAC,UAAM,CAC7B,gBAA8CE,UAAU,CAACG,OAAD,CAAxD,CAAQI,IAAR,aAAQA,IAAR,CAAcC,SAAd,aAAcA,SAAd,CAAyBC,MAAzB,aAAyBA,MAAzB,CAAiCC,QAAjC,aAAiCA,QAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAkB,CAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAH,MAAM,CAACI,gBAAP,CAAwBD,IAAxB,EAEAR,oBAAoB,CAACG,IAAI,CAACA,IAAL,CAAUO,EAAX,CAAeF,IAAI,CAACE,EAApB,CAApB,CAA4CC,IAA5C,CAAiD,SAACC,IAAD,CAAU,CACvDR,SAAS,CAACS,GAAV,CAAcD,IAAd,EACAX,wBAAwB,CAACE,IAAI,CAACA,IAAL,CAAUO,EAAX,CAAeF,IAAI,CAACE,EAApB,CAAxB,CAAgDC,IAAhD,CAAqD,SAACC,IAAD,QACjDN,CAAAA,QAAQ,CAACO,GAAT,CAAaD,IAAb,CADiD,EAArD,EAGH,CALD,EAMH,CAnBD,CAoBA,mBACI,MAAC,GAAD,EAAK,SAAS,CAAC,aAAf,wBACI,WAAI,SAAS,CAAC,MAAd,4EADJ,CAEKP,MAAM,CAACS,GAAP,GAAaC,GAAb,CAAiB,SAACP,IAAD,qBACd,MAAC,IAAD,EACI,KAAK,CAAE,CAAEQ,KAAK,CAAE,MAAT,CADX,CAEI,SAAS,CAAC,eAFd,CAGI,EAAE,CAAEX,MAAM,CAACY,aAAP,GAAyBT,IAAzB,CAAgC,OAAhC,CAA0C,EAHlD,CAKI,OAAO,CAAE,yBAAMD,CAAAA,YAAY,CAACC,IAAD,CAAlB,EALb,eAKyCA,IAAI,CAACU,IAL9C,GAISV,IAAI,CAACE,EAJd,CADc,EAAjB,CAFL,GADJ,CAcH,CArCyB,CAA1B,CAuCA,cAAeR,CAAAA,SAAf","sourcesContent":["import { observer } from 'mobx-react';\r\nimport React, { useContext } from 'react';\r\nimport { Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { Context } from '..';\r\nimport { getCatalogeByUserApi } from '../httpApi/CatalogeApi';\r\nimport { getAllProductsByBrendApi } from '../httpApi/ProductApi';\r\nimport { IBrand } from '../store/BrandStroe';\r\n\r\nconst BrandsBar = observer(() => {\r\n    const { user, cataloges, brands, products } = useContext(Context);\r\n\r\n    const onClikHandle = (item: IBrand) => {\r\n\r\n        //\r\n        // TODO снятие выбора\r\n        // \r\n        // console.log(brands.selectedBrand);\r\n        // if (brands.selectedBrand === undefined)\r\n        //     brands.setSelectedBrand(item);\r\n        // else\r\n        //     brands.setSelectedBrand(undefined);\r\n\r\n        brands.setSelectedBrand(item);\r\n\r\n        getCatalogeByUserApi(user.user.id, item.id).then((data) => {\r\n            cataloges.set(data)\r\n            getAllProductsByBrendApi(user.user.id, item.id).then((data) =>\r\n                products.set(data)\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Row className='d-flex ps-1'>\r\n            <h4 className='mb-3'>Ваши бренды:</h4>\r\n            {brands.get().map((item) =>\r\n                <Card\r\n                    style={{ width: 'auto' }}\r\n                    className='mx-2 mb-4 p-2'\r\n                    bg={brands.selectedBrand === item ? 'light' : ''}\r\n                    key={item.id}\r\n                    onClick={() => onClikHandle(item)}> {item.name}\r\n                </Card>\r\n            )}\r\n        </Row >\r\n    );\r\n});\r\n\r\nexport default BrandsBar;"]},"metadata":{},"sourceType":"module"}